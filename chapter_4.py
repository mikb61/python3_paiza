# リスト
まとまったデータを便利に扱うことができるデータ構造。
インデックスと呼ばれる番号で、それぞれのデータを区別する。
他のプログラミング言語では「配列」と呼ばれる機能が、Pythonでは「リスト」という名前で提供されている。

# 変数で、リストに代入する
player_1 = "勇者"
player_2 = "魔法使い"
player_3 = "戦士"

# player_1 ~ 3を、リストに記述して、print関数で出力してください。
team = [player_1, player_2, player_3]
print(team)
→
['勇者', '魔法使い', '戦士']

# リストの参照
print(team[0]) 直接数値で指定する
print(team[num]) 変数で指定する
print(team[num + 1]) 計算式で指定する

# len関数　要素の数
print(len(team))

# coding: utf-8
# リストの要素の個数を出力する
weapon = ["木の棒", "鉄の棒", "鉄の剣", "銅の剣", "石斧", "エクスカリバー"]
# ここに、要素数を出力するコードを記述する
print(len(weapon))

# append関数  リストの末尾に要素を追加
team.append("戦士")

# coding: utf-8
# リストに要素を追加する
weapon = ["木の棒", "鉄の棒", "鉄の剣", "銅の剣"]
# ここに、要素を追加するコードを記述する
weapon.append("石斧")
print(weapon)
→
['木の棒', '鉄の棒', '鉄の剣', '銅の剣', '石斧']


# リストの要素を上書き
team[0] = "ドラゴン"

# リストの要素を上書きする
weapon = ["木の棒", "鉄の棒", "鉄の剣", "サビた剣"]
# ここに、要素を上書きするコードを記述する
weapon[3] = "石斧"
print(weapon)
→
['木の棒', '鉄の棒', '鉄の剣', '石斧']


# リストの要素を削除
team.pop(0)

# coding: utf-8
# リストの要素を削除する
weapon = ["木の棒", "鉄の棒", "鉄の剣", "銅の剣"]
# ここに、要素を削除するコードを記述する
weapon.pop(2)
print(weapon)
→
['木の棒', '鉄の棒', '銅の剣']

# coding: utf-8
#リストの中身をループで表示する
enemy = ["スライム", "モンスター", "ゾンビ", "ドラゴン", "魔王"]
# ここに、要素をループで表示するコードを記述する
for i in enemy:
    print(i + "が現れた")
