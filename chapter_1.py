# coding: utf-8
# print("勇者は、荒野を歩いていた")
print("モンスターがあらわれた")

# html出力も可。↓はbold
print("<b>モンスター</b>があらわれた")

# 変数の使い方
player = "勇者"
print(player + "は、レベルアップした")

# 文字列に入れる時はstrに直す
number = 100
print("スライムが" + str(number) + "匹あらわれた！")

# 関数
Pythonが持つ特別な機能を呼び出す方法
print関数のように標準で利用できる関数と、モジュールを組み込み(インポート)してから利用する関数がある

関数の例：
print(data) ：指定したデータを出力する
str(number) ：数値を、数を表す文字に変換する


# モジュールを組み込んでから利用する関数
モジュール名と関数名を「.」(ピリオド)でつないで記述

モジュールで組み込む関数の例：
random.random() ：0から1までのランダムな数値を出力する
random.randint(a, b) ：aからbまでの間のランダムな整数を出力する


# 引数(ひきすう)
関数に与えるデータ
引数は、関数に続くカッコの中に記述。
引数が複数ある場合は、「,」(コンマ)で区切る

引数の例：
print(data)のdata ：出力するデータをdataで指定する
str(number)のnumber ：数から文字に変換するデータをnumberで指定する


# 戻り値(もどりち)
関数の処理結果のデータ
返り値と呼ぶ場合もある

random.randint(0, 10)という関数を呼び出すと、0から10までのランダムな数が戻り値となる


import random
number = random.randint(1,6)
print("サイコロの目は" + str(number) + "です。")

# 基本的な代数演算子
+ 足し算 6 + 2 # 8
- 引き算 6 - 2 # 4
* 掛け算 6 * 2 # 12
/ 割り算 6 / 2 # 3
% 余り 6 % 4 # 2

// 演算子は、演算結果が小数のとき、その数を小さい方の整数を解として得ることができる

  
#　優先順位
高い ( )
｜ * / %
低い + -


import random
number = random.randint(1, 10)	# 匹数 1 ～ 10
print("体重100キロのスライムが" + str(number) + "匹あらわれた")
# 合計体重 = 匹数 x 100
print("スライムの合計体重は" + str(number * 100) + "キロです")


a = "01234"
b = "56789"
print(a + b)  # 0123456789

a = 1234
b = 56789
print(a + b)  # 58023
